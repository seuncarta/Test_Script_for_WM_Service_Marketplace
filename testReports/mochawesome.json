{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-20T08:45:47.881Z",
    "end": "2023-03-20T08:46:16.691Z",
    "duration": 28810,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "64863158-cfcc-4cd4-9fc3-0408809b0d8e",
      "title": "",
      "fullFile": "C:\\Users\\corep\\Desktop\\Testing\\Test_Script_for_WM_Service_Marketplace\\TestSuite2\\testScript1.js",
      "file": "\\TestSuite2\\testScript1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "27841961-677a-4267-bcfc-9351c0471c0e",
          "title": "Click Button After Signing In",
          "fullFile": "C:\\Users\\corep\\Desktop\\Testing\\Test_Script_for_WM_Service_Marketplace\\TestSuite2\\testScript1.js",
          "file": "\\TestSuite2\\testScript1.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Click Button After Signing In\"",
              "fullTitle": "Click Button After Signing In \"before each\" hook in \"Click Button After Signing In\"",
              "timedOut": null,
              "duration": 732,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "// Create a new Selenium driver before each test\ndriver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "9637299e-1ad3-4076-9598-65eb04284060",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sign in and click the button",
              "fullTitle": "Click Button After Signing In should sign in and click the button",
              "timedOut": null,
              "duration": 27690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the sign in page\nawait driver.get('https://wmservicemp.thewealthmarket.com/#/authentication/signin');\n// Fill in the sign in form\nawait driver.findElement(By.xpath('/html/body/app-root/div[1]/app-authentication/app-signin/div/div/div/div/form/div[1]/div/div[1]/div/input')).sendKeys('admin@thewealthmarket.com');\nawait driver.findElement(By.xpath('/html/body/app-root/div[1]/app-authentication/app-signin/div/div/div/div/form/div[1]/div/div[2]/div/input')).sendKeys('admin', Key.RETURN);\n// Wait for the home page to load\nawait driver.wait(until.urlIs('https://wmservicemp.thewealthmarket.com/#/index'), 5000);\n// Click the button on the dashboard page\nconst button = await driver.findElement(By.xpath('/html/body/app-root/div[1]/div/app-header/header/nav/div[2]/ul/li[3]/a'));\nawait button.click();\n// // Assert that the button click triggered the expected action\n// const confirmationMessage = await driver.findElement(By.id('confirmation-message')).getText();\n// expect(confirmationMessage).to.equal('Button clicked successfully!');",
              "err": {},
              "uuid": "602f3010-cca0-4bb9-a291-05ea9320e4f4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "602f3010-cca0-4bb9-a291-05ea9320e4f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27690,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "": true
      },
      "version": "6.2.0"
    }
  }
}